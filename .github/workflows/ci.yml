name: Continuous Integration
on: [push]
jobs:
  config:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Repository lampy
        uses: actions/checkout@v2
        with:
          submodules: recursive
          repository: koromerzhin/lampy
          path: lampy
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: config
          path: release.zip
  cache:
    needs: config
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: config
      - name: unzip artifact for deployment
        run: unzip release.zip
      - name: Cache npm packages
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: |
            apps/bin
            apps/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/apps/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: cache
          path: release.zip
  init:
    needs: cache
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: cache
      - name: unzip artifact for deployment
        run: unzip release.zip
      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: make node_modules
      - name: 'SET BDD'
        run: make bddset
      - name: 'Launch Lampy'
        run: make lampy
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: init
          path: release.zip
  docker:
    needs: init
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: init
      - name: unzip artifact for deployment
        run: unzip release.zip
      - name: 'Image pull'
        run: make docker image-pull
      - name: 'Build containers'
        run: make docker deploy
      - name: 'sleep'
        run: make sleep 60
      - name: 'docker ls'
        run: make docker ls
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: docker
          path: release.zip